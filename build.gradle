plugins {
    id 'java-library'
    id 'com.diffplug.spotless' version '7.2.1'
    id "com.vanniktech.maven.publish" version "0.34.0"
}

description = "Jefferson Lab logbook API"
group = 'org.jlab'
version = new File("${projectDir}/VERSION").text.trim()
ext.releaseDate = new Date().format('MMM dd yyyy')

tasks.withType(JavaCompile).configureEach {
    options.release = 11
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
sourceSets {
    integration {
        java.srcDir "${projectDir}/src/integration/java"
        resources.srcDir "${projectDir}/src/integration/resources"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}
configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom runtimeOnly
}
repositories {
    mavenCentral()
}
dependencies {
    testImplementation 'junit:junit:4.13.1'
}
processResources {
    filesMatching('release.properties') {
        filter {
            String line -> line.replaceAll("@VERSION@", version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
    }
}
javadoc {
    options.overview = "src/main/java/overview.html"
    options.source = 11
    options.with {
        links 'https://docs.oracle.com/en/java/javase/11/docs/api'
    }
    failOnError = false // Inside acc network links may fail to resolve
}
tasks.withType(Test).configureEach {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
    }
}
tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath

    testLogging {
        showStandardStreams = true
    }
}
tasks.register('tlog', JavaExec) {
    dependsOn build
    classpath = files('src/integration/resources')
    classpath += sourceSets.integration.runtimeClasspath
    mainClass.set('org.jlab.jlog.example.TLog')
    systemProperties System.getProperties() // forward all; example: setenv JAVA_OPTS -Djavax.net.debug=ssl:handshake
    //systemProperties = ['javax.net.debug': 'ssl:handshake']
}
spotless {
    java {
        googleJavaFormat()
    }
}
mavenPublishing {
    publishToMavenCentral(true)
    signAllPublications()
    coordinates("org.jlab", "jlog", version)

    pom {
        name = project.name
        description = project.description
        url = "https://github.com/JeffersonLab/jlog/"
        licenses {
            license {
                name = "The MIT License"
                url = "https://github.com/JeffersonLab/jlog/blob/master/LICENSE"
            }
        }
        developers {
            developer {
                id = "slominskir"
                name = "Ryan Slominski"
                url = "https://github.com/slominskir/"
            }
        }
        scm {
            url = "https://github.com/JeffersonLab/jlog"
            connection = "scm:git:git://github.com/JeffersonLab/jlog.git"
            developerConnection = "scm:git:ssh://git@github.com/JeffersonLab/jlog.git"
        }
    }
}